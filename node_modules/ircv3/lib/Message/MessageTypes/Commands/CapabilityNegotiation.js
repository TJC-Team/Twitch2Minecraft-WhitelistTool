"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CapabilityNegotiation = void 0;
var tslib_1 = require("tslib");
var Message_1 = require("../../Message");
var MessageDefinition_1 = require("../../MessageDefinition");
var CapabilityNegotiation = /** @class */ (function (_super) {
    tslib_1.__extends(CapabilityNegotiation, _super);
    function CapabilityNegotiation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CapabilityNegotiation_1 = CapabilityNegotiation;
    CapabilityNegotiation.prototype.isResponseTo = function (originalMessage) {
        if (!(originalMessage instanceof CapabilityNegotiation_1)) {
            return false;
        }
        switch (this.params.subCommand) {
            case 'ACK':
            case 'NAK': {
                // trim is necessary because some networks seem to add trailing spaces (looking at you, Freenode)...
                return (originalMessage.params.subCommand === 'REQ' &&
                    originalMessage.params.capabilities === this.params.capabilities.trim());
            }
            case 'LS':
            case 'LIST': {
                return originalMessage.params.subCommand === this.params.subCommand;
            }
            default: {
                return false;
            }
        }
    };
    CapabilityNegotiation.prototype.endsResponseTo = function (originalMessage) {
        if (!(originalMessage instanceof CapabilityNegotiation_1)) {
            return false;
        }
        switch (this.params.subCommand) {
            case 'LS':
            case 'LIST': {
                return !this.params.continued;
            }
            default: {
                return true;
            }
        }
    };
    var CapabilityNegotiation_1;
    CapabilityNegotiation.SUPPORTS_CAPTURE = true;
    tslib_1.__decorate([
        MessageDefinition_1.MessageParamDefinition({
            match: /^(?:[a-z_\-\[\]\\^{}|`][a-z0-9_\-\[\]\\^{}|`]+|\*)$/i,
            optional: true,
            noClient: true
        })
    ], CapabilityNegotiation.prototype, "target", void 0);
    tslib_1.__decorate([
        MessageDefinition_1.MessageParamDefinition({
            match: /^(?:LS|LIST|REQ|ACK|NAK|END|NEW|DEL)$/i
        })
    ], CapabilityNegotiation.prototype, "subCommand", void 0);
    tslib_1.__decorate([
        MessageDefinition_1.MessageParamDefinition({
            match: /^\d+$/,
            optional: true
        })
    ], CapabilityNegotiation.prototype, "version", void 0);
    tslib_1.__decorate([
        MessageDefinition_1.MessageParamDefinition({
            match: /^\*$/,
            optional: true
        })
    ], CapabilityNegotiation.prototype, "continued", void 0);
    tslib_1.__decorate([
        MessageDefinition_1.MessageParamDefinition({
            trailing: true,
            optional: true
        })
    ], CapabilityNegotiation.prototype, "capabilities", void 0);
    CapabilityNegotiation = CapabilityNegotiation_1 = tslib_1.__decorate([
        MessageDefinition_1.MessageType('CAP')
    ], CapabilityNegotiation);
    return CapabilityNegotiation;
}(Message_1.Message));
exports.CapabilityNegotiation = CapabilityNegotiation;
