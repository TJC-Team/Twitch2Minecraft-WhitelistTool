import { LogLevel } from '@d-fischer/logger';
export interface RateLimiterResponseParameters {
    limit: number;
    remaining: number;
    resetsAt: number;
}
export declare abstract class ResponseBasedRateLimiter<Req, Res = any> {
    private _parameters?;
    private _queue;
    private _batchRunning;
    private _nextBatchTimer?;
    private _logger;
    constructor(logLevel: LogLevel);
    request(req: Req): Promise<Res>;
    protected abstract doRequest(req: Req): Promise<Res>;
    protected abstract needsToRetryAfter(res: Res): number | null;
    protected abstract getParametersFromResponse(res: Res): RateLimiterResponseParameters;
    private _runRequestBatch;
    private _runNextBatch;
}
