import { __read, __spread } from "tslib";
function createSingleCacheKey(param) {
    // noinspection FallThroughInSwitchStatementJS
    switch (typeof param) {
        case 'undefined': {
            return '';
        }
        case 'object': {
            if (param === null) {
                return '';
            }
            if ('cacheKey' in param) {
                return param.cacheKey;
            }
            var objKey = JSON.stringify(param);
            if (objKey !== '{}') {
                return objKey;
            }
        }
        // fallthrough
        default: {
            return param.toString();
        }
    }
}
export default function createCacheKey(propName, params, prefix) {
    return __spread([propName], params.map(createSingleCacheKey)).join('/') + (prefix ? '/' : '');
}
//# sourceMappingURL=createCacheKey.mjs.map