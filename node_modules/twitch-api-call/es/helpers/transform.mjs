import { __awaiter, __generator } from "tslib";
import { HttpStatusCodeError } from "../errors/HttpStatusCodeError.mjs";
/** @private */
export function transformTwitchApiResponse(response) {
    return __awaiter(this, void 0, void 0, function () {
        var _a, _b, text;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    if (!!response.ok) return [3 /*break*/, 2];
                    _a = HttpStatusCodeError.bind;
                    _b = [void 0, response.status, response.statusText];
                    return [4 /*yield*/, response.json()];
                case 1: throw new (_a.apply(HttpStatusCodeError, _b.concat([_c.sent()])))();
                case 2:
                    if (response.status === 204) {
                        // eslint-disable-next-line @typescript-eslint/no-explicit-any
                        return [2 /*return*/, undefined]; // oof
                    }
                    return [4 /*yield*/, response.text()];
                case 3:
                    text = _c.sent();
                    if (!text) {
                        // eslint-disable-next-line @typescript-eslint/no-explicit-any
                        return [2 /*return*/, undefined]; // mega oof - twitch doesn't return a response when it should
                    }
                    return [2 /*return*/, JSON.parse(text)];
            }
        });
    });
}
