import { __decorate, __extends } from "tslib";
import { Message, MessageParamDefinition, MessageType } from 'ircv3';
import { ChatUser } from "../../../ChatUser.mjs";
import { fillTextPositions, parseEmoteOffsets, parseEmotePositions } from "../../../Toolkit/EmoteTools.mjs";
/** @private */
var Whisper = /** @class */ (function (_super) {
    __extends(Whisper, _super);
    function Whisper() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(Whisper.prototype, "userInfo", {
        get: function () {
            return new ChatUser(this._prefix.nick, this._tags);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Whisper.prototype, "emoteOffsets", {
        get: function () {
            return parseEmoteOffsets(this._tags.get('emotes'));
        },
        enumerable: false,
        configurable: true
    });
    Whisper.prototype.parseEmotes = function () {
        var messageText = this.params.message;
        var foundEmotes = parseEmotePositions(messageText, this.emoteOffsets);
        return fillTextPositions(messageText, foundEmotes);
    };
    __decorate([
        MessageParamDefinition()
    ], Whisper.prototype, "target", void 0);
    __decorate([
        MessageParamDefinition({
            trailing: true,
            optional: true
        })
    ], Whisper.prototype, "message", void 0);
    Whisper = __decorate([
        MessageType('WHISPER')
    ], Whisper);
    return Whisper;
}(Message));
export { Whisper };
